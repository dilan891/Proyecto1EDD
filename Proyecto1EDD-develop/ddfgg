[33mcommit 85b5b952e04ddec0eea7176a91e8fe0478cd7575[m[33m ([m[1;36mHEAD -> [m[1;32mdilan[m[33m, [m[1;31morigin/dilan[m[33m)[m
Author: dilan891 <dilandeornelas@gmail.com>
Date:   Sat Oct 29 12:27:19 2022 -0400

    grafo y interfaz iniciada

[1mdiff --git a/src/grafos/GrafoLista.java b/src/grafos/GrafoLista.java[m
[1mnew file mode 100644[m
[1mindex 0000000..8d43e42[m
[1m--- /dev/null[m
[1m+++ b/src/grafos/GrafoLista.java[m
[36m@@ -0,0 +1,150 @@[m
[32m+[m[32mpackage grafos;[m
[32m+[m
[32m+[m[32mimport grafos.nodos.ENode;[m
[32m+[m[32mimport grafos.nodos.VNode;[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author dilan[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GrafoLista {[m
[32m+[m[32m    private VNode[] vertices;[m
[32m+[m[32m    private int nNodos; //numero de nodos que tendra el grafo[m
[32m+[m
[32m+[m[32m    /**[m
[32m+[m[32m     * @param nNodos numero de nodos que tendra el grafo[m
[32m+[m[32m    **/[m
[32m+[m[32m    public GrafoLista(int nNodos) {[m
[32m+[m[32m        this.nNodos = nNodos;[m
[32m+[m[32m        this.vertices = null;[m
[32m+[m[32m        createLista();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * crea la lista que contendra los nodos[m
[32m+[m[32m    **/[m
[32m+[m[32m    public void createLista(){[m
[32m+[m[32m        VNode[] vert = new VNode[nNodos];[m
[32m+[m[32m        for (int i = 0; i < vert.length; i++) {[m
[32m+[m[32m            vert[i] = new VNode();[m
[32m+[m[32m            vert[i].setDato(i);[m
[32m+[m[32m        }[m
[32m+[m[32m        vertices = vert;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Recorre el array vertices y une los respectivos nodos con aristas[m
[32m+[m[32m     * @param ancho El ancho que tendra la tabla[m
[32m+[m[32m     * @param alto El alto que tendra la tabla[m
[32m+[m[32m    **/[m
[32m+[m[32m    public void generarTabla(int ancho,int alto){[m
[32m+[m[32m        int fila = 1;//fila que va por el recorrido[m
[32m+[m[32m        for (int i = 0 ; i < vertices.length; i++) {[m
[32m+[m[32m            if (i == 0) {[m
[32m+[m[32m                unir(0, 1);[m
[32m+[m[32m                unir(1, 0);[m
[32m+[m[32m                unir(0, i+ancho);[m
[32m+[m[32m                unir(i+ancho, 0);[m
[32m+[m[32m            }else if(ancho*(fila-1) == i){[m
[32m+[m[32m                unir(i, i+1);[m
[32m+[m[32m                if (fila != alto) {[m
[32m+[m[32m                    int nodoAbajo = ancho*fila;//nodo debajo del nodo i[m
[32m+[m[32m                    unir(i, nodoAbajo);[m
[32m+[m[32m                    unir(nodoAbajo,i);[m
[32m+[m[32m                }[m
[32m+[m[32m            }else if (i == ((ancho*fila)-1)) {[m[41m           [m
[32m+[m[32m                //System.out.println((ancho*fila)-1);[m
[32m+[m[32m                unir(i, i-1);[m
[32m+[m[32m                //unir((ancho*fila)-2, (ancho*fila)-1);[m
[32m+[m[32m                if (fila != alto) {[m
[32m+[m[32m                  int nodoAbajo = (ancho*(fila+1))-1;//pocicion del nodo ubicado abajo del nodo i[m
[32m+[m[32m                  unir(i,nodoAbajo);[m
[32m+[m[32m                  unir(nodoAbajo,i);[m[41m  [m
[32m+[m[32m                }[m[41m               [m
[32m+[m[32m                fila++;[m
[32m+[m[32m            }else{ //el else une todos los nodos que no esten en ezquinas o extremos[m
[32m+[m[32m                unir(i,i-1);[m
[32m+[m[32m                unir(i, i+1);[m
[32m+[m[32m                if (fila != alto) {[m
[32m+[m[32m                    int nodoAbajo = i+ancho;//pocicion del nodo ubicado abajo del nodo i[m
[32m+[m[32m                    unir(i, nodoAbajo);[m
[32m+[m[32m                    unir(nodoAbajo, i);[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Une dos nodos con arcos[m
[32m+[m[32m     * @param nodo es la posicion del nodo en el que se agrega un arco[m
[32m+[m[32m     * @param nodoUnido es la poscion del nodo que se va unir[m
[32m+[m[32m    **/[m
[32m+[m[32m    public void unir(int nodo,int nodoUnido){[m
[32m+[m[32m        ENode nodoU = new ENode();[m
[32m+[m[32m        nodoU.setPosition(nodoUnido);[m
[32m+[m[32m        if (vertices[nodo].getNext() == null){[m
[32m+[m[32m            vertices[nodo].setNext(nodoU); //inecesesario[m
[32m+[m[32m        }else{[m
[32m+[m[32m            ENode aux = vertices[nodo].getNext();[m
[32m+[m[32m            while(aux != null){[m
[32m+[m[32m                if (aux.getNext() == null) {[m
[32m+[m[32m                    aux.setNext(nodoU);[m
[32m+[m[32m                    break;[m
[32m+[m[32m                }[m
[32m+[m[32m                aux = aux.getNext();[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m[41m [m
[32m+[m[32m        //unir(nodoUnido,nodo); implementar para que quede guardado en los dos[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public void mostrarLog(){[m
[32m+[m[32m        for (int i = 0; i < vertices.length; i++) {[m
[32m+[m[32m            System.out.println("\nposicion:  " + i);[m
[32m+[m[32m            if (vertices[i].getNext() != null) {[m
[32m+[m[32m                //System.out.println("Contiene al nodo de la posicion: " + vertices[i].getNext().getPosition());[m
[32m+[m[32m                System.out.println("contiene los nodos: ");[m
[32m+[m[32m                ENode aux = vertices[i].getNext();[m
[32m+[m[32m                while (aux!= null){[m
[32m+[m[32m                    System.out.println("--nodo " + aux.getPosition());[m
[32m+[m[32m                    aux = aux.getNext();[m
[32m+[m[32m                }[m
[32m+[m[32m            }else{[m
[32m+[m[32m                System.out.println("nothing");[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Busca si el nodo tiene una arista con el otro[m
[32m+[m[32m     * @param pNodo posicion del nodo[m
[32m+[m[32m     * @param find posicion del nodo que se busca[m
[32m+[m[32m    **/[m
[32m+[m[32m    public boolean isIn(int pNodo,int find){[m
[32m+[m[32m        ENode aux = vertices[pNodo].getNext();[m
[32m+[m[32m        while(aux !=null){[m
[32m+[m[32m            if(aux.getPosition()==find){[m
[32m+[m[32m                return true;[m
[32m+[m[32m            }[m
[32m+[m[32m            aux = aux.getNext();[m
[32m+[m[32m        }[m
[32m+[m[32m        return false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public VNode[] getVertices() {[m
[32m+[m[32m        return vertices;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public int getFilas() {[m
[32m+[m[32m        return nNodos;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setFilas(int nNodos) {[m
[32m+[m[32m        this.nNodos = nNodos;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/src/grafos/nodos/ENode.java b/src/grafos/nodos/ENode.java[m
[1mnew file mode 100644[m
[1mindex 0000000..b8ef784[m
[1m--- /dev/null[m
[1m+++ b/src/grafos/nodos/ENode.java[m
[36m@@ -0,0 +1,35 @@[m
[32m+[m[32mpackage grafos.nodos;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Nodo unido al VNodo[m
[32m+[m[32m * @author dilan[m
[32m+[m[32m */[m
[32m+[m[32mpublic class ENode {[m
[32m+[m
[32m+[m[32m    int position; //la poscion del VNodo orginal al que esta asociado[m
[32m+[m[32m    ENode next;[m
[32m+[m
[32m+[m[32m    public ENode() {[m
[32m+[m[32m        this.next = null;[m
[32m+[m[32m        this.position = -1;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getPosition() {[m
[32m+[m[32m        return position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setPosition(int position) {[m
[32m+[m[32m        this.position = position;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public ENode getNext() {[m
[32m+[m[32m        return next;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setNext(ENode next) {[m
[32m+[m[32m        this.next = next;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/src/grafos/nodos/VNode.java b/src/grafos/nodos/VNode.java[m
[1mnew file mode 100644[m
[1mindex 0000000..a5726de[m
[1m--- /dev/null[m
[1m+++ b/src/grafos/nodos/VNode.java[m
[36m@@ -0,0 +1,33 @@[m
[32m+[m[32mpackage grafos.nodos;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m * Nodo pricipal[m[41m [m
[32m+[m[32m * @author dilan[m
[32m+[m[32m */[m
[32m+[m[32mpublic class VNode {[m
[32m+[m[32m    int dato;[m
[32m+[m[32m    ENode nextFirst;[m
[32m+[m
[32m+[m[32m    public VNode() {[m
[32m+[m[32m        this.dato = 0;[m
[32m+[m[32m        this.nextFirst = null;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public int getDato() {[m
[32m+[m[32m        return dato;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setDato(int dato) {[m
[32m+[m[32m        this.dato = dato;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public ENode getNext() {[m
[32m+[m[32m        return nextFirst;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void setNext(ENode next) {[m
[32m+[m[32m        this.nextFirst = next;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m}[m
[1mdiff --git a/src/proyecto1/Proyecto1.java b/src/proyecto1/Proyecto1.java[m
[1mindex 3596b81..f0b9c20 100644[m
[1m--- a/src/proyecto1/Proyecto1.java[m
[1m+++ b/src/proyecto1/Proyecto1.java[m
[36m@@ -1,5 +1,7 @@[m
 package proyecto1;[m
 [m
[32m+[m[32mimport grafos.GrafoLista;[m
[32m+[m[32mimport proyecto1.ventanas.GrafoVentana;[m
 import proyecto1.ventanas.InicioVentana;[m
 [m
 public class Proyecto1 {[m
[36m@@ -10,9 +12,27 @@[m [mpublic class Proyecto1 {[m
     public static void main(String[] args) {[m
         // TODO code application logic here[m
         [m
[31m-        System.out.println("Laberinto");[m
[31m-        InicioVentana v = new InicioVentana();[m
[31m-        v.setVisible(true);[m
[32m+[m[32m//        System.out.println("Laberinto");[m
[32m+[m[32m//        InicioVentana v = new InicioVentana();[m
[32m+[m[32m//        v.setVisible(true);[m
[32m+[m[41m        [m
[32m+[m[32m        int ancho = 4; //numero de ancho del laberinto[m
[32m+[m[32m        int alto = 4; //numero de alto del laberinto[m
[32m+[m[32m        int nNodos = alto * ancho; //numero de nodos que tendra el grafo a generar[m
[32m+[m[41m        [m
[32m+[m[32m        GrafoLista grafo2 = new GrafoLista(nNodos);[m
[32m+[m[32m        grafo2.generarTabla(ancho,alto);[m
[32m+[m[32m        grafo2.mostrarLog();[m
[32m+[m[41m        [m
[32m+[m[32m        GrafoVentana ventana = new GrafoVentana(grafo2,ancho,alto);[m
[32m+[m[32m        ventana.setVisible(true);[m
[32m+[m[41m        [m
[32m+[m[32m//        GrafoMatriz grafo1 = new GrafoMatriz(4, false);[m
[32m+[m[32m//[m[41m       [m
[32m+[m[32m//        InterfazMatriz ventana = new InterfazMatriz(grafo1.getMaxNodos(),grafo1.getMatrizAdy());[m
[32m+[m[32m//        ventana.setVisible(true);[m
[32m+[m[32m//        grafo1.mostrarMatriz();[m
[32m+[m
         [m
     }[m
     [m
[1mdiff --git a/src/proyecto1/ventanas/GrafoVentana.form b/src/proyecto1/ventanas/GrafoVentana.form[m
[1mnew file mode 100644[m
[1mindex 0000000..fa2d135[m
[1m--- /dev/null[m
[1m+++ b/src/proyecto1/ventanas/GrafoVentana.form[m
[36m@@ -0,0 +1,43 @@[m
[32m+[m[32m<?xml version="1.0" encoding="UTF-8" ?>[m
[32m+[m
[32m+[m[32m<Form version="1.3" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">[m
[32m+[m[32m  <Properties>[m
[32m+[m[32m    <Property name="defaultCloseOperation" type="int" value="3"/>[m
[32m+[m[32m  </Properties>[m
[32m+[m[32m  <SyntheticProperties>[m
[32m+[m[32m    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>[m
[32m+[m[32m    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>[m
[32m+[m[32m  </SyntheticProperties>[m
[32m+[m[32m  <AuxValues>[m
[32m+[m[32m    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>[m
[32m+[m[32m    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>[m
[32m+[m[32m  </AuxValues>[m
[32m+[m
[32m+[m[32m  <Layout>[m
[32m+[m[32m    <DimensionLayout dim="0">[m
[32m+[m[32m      <Group type="103" groupAlignment="0" attributes="0">[m
[32m+[m[32m          <Component id="jPanel1" alignment="0" pref="871" max="32767" attributes="0"/>[m
[32m+[m[32m      </Group>[m
[32m+[m[32m    </DimensionLayout>[m
[32m+[m[32m    <DimensionLayout dim="1">[m
[32m+[m[32m      <Group type="103" groupAlignment="0" attributes="0">[m
[32m+[m[32m          <Component id="jPanel1" alignment="0" pref="515" max="32767" attributes="0"/>[m
[32m+[m[32m      </Group>[m
[32m+[m[32m    </DimensionLayout>[m
[32m+[m[32m  </Layout>[m
[32m+[m[32m  <SubComponents>[m
[32m+[m[32m    <Container class="javax.swing.JPanel" name="jPanel1">[m
[32m+[m
[32m+[m[32m      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">[m
[32m+[m[32m        <Property name="useNullLayout" type="boolean" value="false"/>[m
[32m+[m[32m      </Layout>[m
[32m+[m[32m    </Container>[m
[32m+[m[32m  </SubComponents>[m
[32m+[m[32m</Form>[m
[1mdiff --git a/src/proyecto1/ventanas/GrafoVentana.java b/src/proyecto1/ventanas/GrafoVentana.java[m
[1mnew file mode 100644[m
[1mindex 0000000..69e7258[m
[1m--- /dev/null[m
[1m+++ b/src/proyecto1/ventanas/GrafoVentana.java[m
[36m@@ -0,0 +1,92 @@[m
[32m+[m[32mpackage proyecto1.ventanas;[m
[32m+[m
[32m+[m[32mimport grafos.GrafoLista;[m
[32m+[m[32mimport javax.swing.JPanel;[m
[32m+[m
[32m+[m[32m/**[m
[32m+[m[32m *[m
[32m+[m[32m * @author dilan[m
[32m+[m[32m */[m
[32m+[m[32mpublic class GrafoVentana extends javax.swing.JFrame {[m
[32m+[m
[32m+[m[32m    GrafoLista grafo;[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * Creates new form Grafo[m
[32m+[m[32m     * @param grafo grafo que aparecera en la interfaz[m
[32m+[m[32m     * @param anchoTabla el ancho que tendra la tabla generada[m
[32m+[m[32m     */[m
[32m+[m[32m    public GrafoVentana(GrafoLista grafo,int anchoTabla,int altoTabla) {[m
[32m+[m[32m        this.grafo = grafo;[m
[32m+[m[32m        initComponents();[m
[32m+[m[32m        this.setResizable(false);[m
[32m+[m[32m        this.setLocationRelativeTo(null);[m[41m [m
[32m+[m[32m        this.setTitle("Laberinto");[m
[32m+[m[32m        gererarPanel(anchoTabla,altoTabla);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void gererarPanel(int anchoTabla,int altoTabla){[m
[32m+[m[32m        int alto,ancho,inicialX,inicialY;[m
[32m+[m[32m        inicialX = 160;//pocision inicial en x de la celda 1[m
[32m+[m[32m        inicialY = 20;//pocision inicial en y de la celda 1[m
[32m+[m[32m        alto = 50;//alto de la celda[m
[32m+[m[32m        ancho = 50;//ancho de la celda[m
[32m+[m[32m        int nodo = 0;//contador del nodo al que va[m
[32m+[m[32m        System.out.println("\nnodos: ");[m
[32m+[m[32m        for (int i = 0; i < altoTabla; i++) {[m
[32m+[m[32m            int auxX = inicialX;[m
[32m+[m[32m            for (int j = 0; j < anchoTabla; j++) {[m
[32m+[m[32m                int top=0,left=0,button=0,right = 0;[m
[32m+[m[32m                JPanel nodo1 = new JPanel();[m
[32m+[m[32m                System.out.println(grafo.getVertices()[nodo].getDato());[m
[32m+[m[32m                if (grafo.isIn(nodo, nodo-1)) { //verifica si el nodo anterior esta en la unido si no es asi borra el borde izquirdo[m
[32m+[m[32m                    System.out.print(grafo.getVertices()[nodo].getDato());[m
[32m+[m[32m                    System.out.print(" el anterior es: ");[m[41m                   [m
[32m+[m[32m                    System.out.println(grafo.getVertices()[nodo-1].getDato());[m
[32m+[m[32m                    System.out.println("si");[m
[32m+[m[32m                    left = 1;[m
[32m+[m[32m                }[m
[32m+[m[32m                nodo1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, left, 1, 1, new java.awt.Color(51, 51, 51)));[m
[32m+[m[32m                jPanel1.add(nodo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(auxX, inicialY, ancho, alto));[m
[32m+[m[32m                auxX = auxX + ancho;[m
[32m+[m[32m                nodo++;[m
[32m+[m[32m            }[m
[32m+[m[32m            inicialY = inicialY + alto;[m
[32m+[m[32m        }[m[41m       [m
[32m+[m[32m        pack();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    /**[m
[32m+[m[32m     * This method is called from within the constructor to initialize the form.[m
[32m+[m[32m     * WARNING: Do NOT modify this code. The content of this method is always[m
[32m+[m[32m     * regenerated by the Form Editor.[m
[32m+[m[32m     */[m
[32m+[m[32m    @SuppressWarnings("unchecked")[m
[32m+[m[32m    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents[m
[32m+[m[32m    private void initComponents() {[m
[32m+[m
[32m+[m[32m        jPanel1 = new javax.swing.JPanel();[m
[32m+[m
[32m+[m[32m        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);[m
[32m+[m
[32m+[m[32m        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());[m
[32m+[m
[32m+[m[32m        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());[m
[32m+[m[32m        getContentPane().setLayout(layout);[m
[32m+[m[32m        layout.setHorizontalGroup([m
[32m+[m[32m            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)[m
[32m+[m[32m            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 871, Short.MAX_VALUE)[m
[32m+[m[32m        );[m
[32m+[m[32m        layout.setVerticalGroup([m
[32m+[m[32m            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)[m
[32m+[m[32m            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)[m
[32m+[m[32m        );[m
[32m+[m
[32m+[m[32m        pack();[m
[32m+[m[32m    }// </editor-fold>//GEN-END:initComponents[m
[32m+[m
[32m+[m
[32m+[m[32m    // Variables declaration - do not modify//GEN-BEGIN:variables[m
[32m+[m[32m    private javax.swing.JPanel jPanel1;[m
[32m+[m[32m    // End of variables declaration//GEN-END:variables[m
[32m+[m[32m}[m
